;C/80 Compiler 3.1 (4/11/84) - (c) 1984 The Software Toolworks

	CSEG
.d:	DW	0
	EXTRN	root

	PUBLIC	SendFY

SendFY:	DCX	SP
	LXI	H,0
	MOV	A,H
	ORA	L
	JZ	.e
	CALL	prnt_1
	LXI	H,.c
	PUSH	H
	CALL	prnt_2
	POP	B
.e:	LXI	H,0
	SHLD	root
	LXI	H,3
	DAD	SP
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	PUSH	H
	CALL	GetFile
	POP	B
	LHLD	root
	MOV	A,H
	ORA	L
	JZ	.f
	CALL	prnt_1
	LXI	H,.c+11
	PUSH	H
	CALL	prnt_2
	POP	B
	CALL	ListFil
	CALL	prnt_1
	LXI	H,.c+38
	PUSH	H
	CALL	prnt_2
	POP	B
.i:	LXI	H,0
	DAD	SP
	PUSH	H
	CALL	GetCon
	PUSH	H
	CALL	toupper
	POP	B
	POP	D
	MOV	A,L
	STAX	D
.g:	LXI	H,0
	DAD	SP
	MOV	L,M
	MVI	H,0
	MOV	A,H
	ORA	L
	JZ	.i
.h:	LXI	H,0
	DAD	SP
	MOV	L,M
	MVI	H,0
	LXI	D,-89
	DAD	D
	MOV	A,H
	ORA	L
	JNZ	.j
	CALL	prnt_1
	LXI	H,.c+47
	PUSH	H
	CALL	prnt_2
	POP	B
	CALL	SendBat
	JMP	.k
.j:	CALL	prnt_1
	LXI	H,.c+64
	PUSH	H
	LXI	H,2
	DAD	SP
	MOV	L,M
	MVI	H,0
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
.k:	CALL	FreeLis
.f:	DS	0
.l:	INX	SP
	RET
.c:
	DB	10
	DB	'SendFY()'
	DB	10
	DB	0
	DB	'Send the following files?'
	DB	10
	DB	0
	DB	'Ok (Y)? '
	DB	0
	DB	10
	DB	'Sending Files '
	DB	10
	DB	0
	DB	10
	DB	'Batch Send Cancelled %xH'
	DB	10
	DB	0

	PUBLIC	SendBat
	DSEG
.n:	DW	0
.o:	DW	0
.p:	DW	0
.q:	DW	0
.r:	DW	0
.s:	DW	0
.t:	DW	0
.u:	DW	0
.v:	DW	0
	CSEG

SendBat:	LXI	H,-21
	DAD	SP
	SPHL
	LHLD	.v
	PUSH	H
	LHLD	.u
	PUSH	H
	LHLD	.t
	PUSH	H
	LHLD	.s
	PUSH	H
	LHLD	.r
	PUSH	H
	LHLD	.q
	PUSH	H
	LHLD	.p
	PUSH	H
	LHLD	.o
	PUSH	H
	LHLD	.n
	PUSH	H
	LHLD	root
	SHLD	.n
	LXI	H,0
	SHLD	.s
.w:	LHLD	.n
	MOV	A,H
	ORA	L
	JZ	.x
	LHLD	.n
	INX	H
	INX	H
	PUSH	H
	CALL	strlen
	POP	B
	INX	H
	SHLD	.r
	LXI	H,0
	SHLD	.q
	LXI	H,0
	SHLD	.u
	LXI	H,0
	SHLD	.p
.ab:	LHLD	.r
	XCHG
	LHLD	.p
	CALL	c.gt##
	JZ	.z
	JMP	.bb
.y:	LHLD	.p
	INX	H
	SHLD	.p
	DCX	H
	JMP	.ab
.bb:	LHLD	.n
	INX	H
	INX	H
	XCHG
	LHLD	.p
	DAD	D
	MOV	L,M
	MVI	H,0
	LXI	D,-32
	DAD	D
	CALL	e.0##
	JZ	.cb
	LHLD	.q
	INX	H
	SHLD	.q
	DCX	H
	XCHG
	LXI	H,19
	DAD	SP
	DAD	D
	PUSH	H
	LHLD	.n
	INX	H
	INX	H
	XCHG
	LHLD	.p
	DAD	D
	MOV	L,M
	MVI	H,0
	POP	D
	MOV	A,L
	STAX	D
.cb:	JMP	.y
.z:	LXI	H,19
	DAD	SP
	PUSH	H
	LXI	H,.m
	PUSH	H
	CALL	fopen
	POP	B
	POP	B
	SHLD	.v
	LHLD	.v
	MOV	A,H
	ORA	L
	JNZ	.db
	CALL	prnt_1
	LXI	H,.m+3
	PUSH	H
	LXI	H,21
	DAD	SP
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	JMP	.eb
.db:	LXI	H,19
	DAD	SP
	PUSH	H
	LXI	H,.m+25
	PUSH	H
	CALL	index
	POP	B
	POP	B
	SHLD	.p
	LHLD	.p
	LXI	D,32767
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JNC	.fb
	LXI	H,19
	DAD	SP
	XCHG
	LHLD	.p
	DAD	D
	INX	H
	SHLD	.o
	JMP	.gb
.fb:	LXI	H,19
	DAD	SP
	SHLD	.o
.gb:	LHLD	.v
	PUSH	H
	LHLD	.o
	PUSH	H
	CALL	SendFX
	POP	B
	POP	B
	LXI	H,0
	MOV	A,H
	ORA	L
	JZ	.hb
	CALL	prnt_1
	LXI	H,.m+27
	PUSH	H
	CALL	prnt_2
	POP	B
.hb:	LHLD	.s
	INX	H
	SHLD	.s
	DCX	H
.eb:	LHLD	.n
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	SHLD	.n
	JMP	.w
.x:	LHLD	.s
	LXI	D,32767
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JNC	.ib
	CALL	prnt_1
	LXI	H,.m+47
	PUSH	H
	CALL	prnt_2
	POP	B
	LXI	H,20
	PUSH	H
	CALL	Readlin
	POP	B
	SHLD	.t
	LXI	H,0
	MOV	A,H
	ORA	L
	JZ	.jb
	CALL	prnt_1
	LXI	H,.m+73
	PUSH	H
	LHLD	.t
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
.jb:	LHLD	.t
	LXI	D,-67
	DAD	D
	MOV	A,H
	ORA	L
	JNZ	.kb
	LXI	H,1
	PUSH	H
	CALL	Send
	POP	B
	LXI	H,0
	PUSH	H
	CALL	Send
	POP	B
	LXI	H,255
	PUSH	H
	CALL	Send
	POP	B
	LXI	H,0
	SHLD	.p
.nb:	LHLD	.p
	LXI	D,32638
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JC	.mb
	JMP	.ob
.lb:	LHLD	.p
	INX	H
	SHLD	.p
	DCX	H
	JMP	.nb
.ob:	LXI	H,0
	PUSH	H
	CALL	Send
	POP	B
	JMP	.lb
.mb:	LXI	H,20
	PUSH	H
	CALL	Readlin
	POP	B
	SHLD	.t
	LXI	D,-6
	DAD	D
	CALL	e.0##
	JZ	.pb
	CALL	prnt_1
	LXI	H,.m+81
	PUSH	H
	CALL	prnt_2
	POP	B
.pb:	DS	0
.kb:	DS	0
.ib:	DS	0
.qb:	POP	H
	SHLD	.n
	POP	H
	SHLD	.o
	POP	H
	SHLD	.p
	POP	H
	SHLD	.q
	POP	H
	SHLD	.r
	POP	H
	SHLD	.s
	POP	H
	SHLD	.t
	POP	H
	SHLD	.u
	POP	H
	SHLD	.v
	LXI	H,21
	DAD	SP
	SPHL
	RET
.m:
	DB	'rb'
	DB	0
	DB	10
	DB	'File open error! %s'
	DB	10
	DB	0
	DB	':'
	DB	0
	DB	'Return from SendFX'
	DB	10
	DB	0
	DB	'Sending Ymodem end block'
	DB	10
	DB	0
	DB	'Got %x'
	DB	10
	DB	0
	DB	'Ymodem end block not ACKed'
	DB	10
	DB	0

	PUBLIC	GetYmod
	DSEG
.sb:	DW	0
.tb:	DW	0
.ub:	DW	0
.vb:	DW	0
.wb:	DW	0
.xb:	DW	0
.yb:	DW	0
.zb:	DW	0
.ac:	DW	0
.bc:	DW	0
.cc:	DW	0
.dc:	DW	0
	CSEG

GetYmod:	LXI	H,-151
	DAD	SP
	SPHL
	LHLD	.dc
	PUSH	H
	LHLD	.cc
	PUSH	H
	LHLD	.bc
	PUSH	H
	LHLD	.ac
	PUSH	H
	LHLD	.zb
	PUSH	H
	LHLD	.yb
	PUSH	H
	LHLD	.xb
	PUSH	H
	LHLD	.wb
	PUSH	H
	LHLD	.vb
	PUSH	H
	LHLD	.ub
	PUSH	H
	LHLD	.tb
	PUSH	H
	LHLD	.sb
	PUSH	H
	LXI	H,0
	SHLD	.ub
	LXI	H,0
	SHLD	.sb
	LXI	H,0
	SHLD	.xb
	LXI	H,0
	SHLD	.cc
.gc:	LXI	H,67
	PUSH	H
	CALL	Send
	POP	B
.jc:	LXI	H,5
	PUSH	H
	CALL	Readlin
	POP	B
	SHLD	.ac
	LHLD	.ac
	INX	H
	MOV	A,H
	ORA	L
	JNZ	.kc
	LHLD	.ub
	INX	H
	SHLD	.ub
	DCX	H
	JMP	.lc
.kc:	LHLD	.xb
	INX	H
	SHLD	.xb
	DCX	H
	XCHG
	LXI	H,25
	DAD	SP
	DAD	D
	PUSH	H
	LHLD	.ac
	POP	D
	MOV	A,L
	STAX	D
.lc:	CALL	GetCon
	LXI	D,-24
	DAD	D
	MOV	A,H
	ORA	L
	JNZ	.mc
	CALL	prnt_1
	LXI	H,.rb
	PUSH	H
	CALL	prnt_2
	POP	B
	LHLD	.sb
.nc:	XCHG
	POP	H
	SHLD	.sb
	POP	H
	SHLD	.tb
	POP	H
	SHLD	.ub
	POP	H
	SHLD	.vb
	POP	H
	SHLD	.wb
	POP	H
	SHLD	.xb
	POP	H
	SHLD	.yb
	POP	H
	SHLD	.zb
	POP	H
	SHLD	.ac
	POP	H
	SHLD	.bc
	POP	H
	SHLD	.cc
	POP	H
	SHLD	.dc
	LXI	H,151
	DAD	SP
	SPHL
	XCHG
	RET
.mc:	DS	0
.hc:	LHLD	.xb
	LXI	D,133
	CALL	c.gt##
	JZ	.oc
	LHLD	.ub
	LXI	D,10
	CALL	c.gt##
.oc:	CALL	e.0##
	JNZ	.jc
.ic:	LXI	H,25
	DAD	SP
	MOV	L,M
	MVI	H,0
	SHLD	.tb
	LXI	H,0
	MOV	A,H
	ORA	L
	JZ	.pc
	CALL	prnt_1
	LXI	H,.rb+16
	PUSH	H
	LHLD	.tb
	PUSH	H
	LHLD	.ub
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	POP	B
	LXI	H,0
	SHLD	.wb
.sc:	LHLD	.xb
	XCHG
	LHLD	.wb
	CALL	c.gt##
	JZ	.rc
	JMP	.tc
.qc:	LHLD	.wb
	INX	H
	SHLD	.wb
	DCX	H
	JMP	.sc
.tc:	CALL	prnt_1
	LXI	H,.rb+44
	PUSH	H
	LXI	H,27
	DAD	SP
	XCHG
	LHLD	.wb
	DAD	D
	MOV	L,M
	MVI	H,0
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	JMP	.qc
.rc:	CALL	prnt_1
	LXI	H,.rb+48
	PUSH	H
	LHLD	.cc
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
.pc:	LHLD	.tb
	LXI	D,-4
	DAD	D
	MOV	A,H
	ORA	L
	JNZ	.uc
	LXI	H,0
	SHLD	.sb
	JMP	.fc
.uc:	LHLD	.tb
	DCX	H
	MOV	A,H
	ORA	L
	JNZ	.vc
	LXI	H,25
	DAD	SP
	INX	H
	MOV	L,M
	MVI	H,0
	SHLD	.ac
	LXI	H,25
	DAD	SP
	INX	H
	INX	H
	MOV	L,M
	MVI	H,0
	SHLD	.bc
	LHLD	.ac
	XCHG
	LHLD	.bc
	DAD	D
	PUSH	H
	LXI	H,0
	CALL	c.not##
	CALL	a.##
	MOV	A,H
	ORA	L
	JZ	.wc
	LXI	H,3
	SHLD	.wb
.zc:	LHLD	.xb
	DCX	H
	DCX	H
	XCHG
	LHLD	.wb
	CALL	c.gt##
	JZ	.yc
	JMP	.ad
.xc:	LHLD	.wb
	INX	H
	SHLD	.wb
	DCX	H
	JMP	.zc
.ad:	LXI	H,25
	DAD	SP
	XCHG
	LHLD	.wb
	DAD	D
	MOV	L,M
	MVI	H,0
	XCHG
	LXI	H,8
	CALL	c.asl##
	PUSH	H
	LHLD	.vb
	CALL	x.##
	SHLD	.vb
	LXI	H,0
	SHLD	.zb
.dd:	LHLD	.zb
	LXI	D,32760
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JC	.cd
	JMP	.ed
.bd:	LHLD	.zb
	INX	H
	SHLD	.zb
	DCX	H
	JMP	.dd
.ed:	LHLD	.vb
	MVI	L,0
	MOV	A,H
	ANI	128
	MOV	H,A
	MOV	A,H
	ORA	L
	JZ	.fd
	LHLD	.vb
	DAD	H
	LXI	D,4129
	PUSH	D
	CALL	x.##
	SHLD	.vb
	JMP	.gd
.fd:	LHLD	.vb
	DAD	H
	SHLD	.vb
.gd:	JMP	.bd
.cd:	JMP	.xc
.yc:	LXI	H,25
	DAD	SP
	LXI	D,131
	DAD	D
	MOV	L,M
	MVI	H,0
	MVI	H,0
	SHLD	.ac
	LXI	H,25
	DAD	SP
	LXI	D,132
	DAD	D
	MOV	L,M
	MVI	H,0
	MVI	H,0
	SHLD	.bc
	LXI	H,0
	MOV	A,H
	ORA	L
	JZ	.hd
	CALL	prnt_1
	LXI	H,.rb+58
	PUSH	H
	LHLD	.ac
	PUSH	H
	LHLD	.bc
	PUSH	H
	LHLD	.vb
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	POP	B
	POP	B
.hd:	LHLD	.ac
	XCHG
	LXI	H,8
	CALL	c.asl##
	XCHG
	LHLD	.bc
	DAD	D
	PUSH	H
	LHLD	.vb
	CALL	e.##
	JZ	.id
	LXI	H,3
	SHLD	.wb
.jd:	LXI	H,25
	DAD	SP
	XCHG
	LHLD	.wb
	DAD	D
	MOV	L,M
	MVI	H,0
	CALL	e.0##
	JZ	.ld
	LHLD	.wb
	LXI	D,17
	CALL	c.gt##
.ld:	CALL	e.0##
	JZ	.kd
	LHLD	.wb
	INX	H
	SHLD	.wb
	DCX	H
	JMP	.jd
.kd:	LHLD	.wb
	DCX	H
	DCX	H
	DCX	H
	MOV	A,H
	ORA	L
	JNZ	.md
	LXI	H,6
	PUSH	H
	CALL	Send
	POP	B
	LHLD	.sb
	JMP	.nc
.md:	LHLD	.wb
	LXI	D,32751
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JC	.nd
	LXI	H,25
	DAD	SP
	INX	H
	INX	H
	INX	H
	SHLD	.dc
	CALL	prnt_1
	LXI	H,.rb+82
	PUSH	H
	LHLD	.dc
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	LHLD	.dc
	PUSH	H
	LXI	H,.rb+97
	PUSH	H
	CALL	fopen
	POP	B
	POP	B
	SHLD	.sb
	LHLD	.sb
	LXI	D,32767
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JNC	.od
	CALL	prnt_1
	LXI	H,.rb+100
	PUSH	H
	LHLD	.dc
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	CALL	getchar
	PUSH	H
	CALL	toupper
	POP	B
	LXI	D,-89
	DAD	D
	MOV	A,H
	ORA	L
	JNZ	.pd
	CALL	prnt_1
	LXI	H,.rb+118
	PUSH	H
	CALL	prnt_2
	POP	B
	LHLD	.sb
	PUSH	H
	CALL	fclose
	POP	B
	LHLD	.dc
	PUSH	H
	CALL	unlink
	POP	B
	LHLD	.dc
	PUSH	H
	LXI	H,.rb+135
	PUSH	H
	CALL	fopen
	POP	B
	POP	B
	SHLD	.sb
.pd:	JMP	.qd
.od:	CALL	prnt_1
	LXI	H,.rb+138
	PUSH	H
	CALL	prnt_2
	POP	B
	LHLD	.dc
	PUSH	H
	LXI	H,.rb+135
	PUSH	H
	CALL	fopen
	POP	B
	POP	B
	SHLD	.sb
.qd:	LHLD	.sb
	MOV	A,H
	ORA	L
	JNZ	.rd
	CALL	prnt_1
	LXI	H,.rb+157
	PUSH	H
	LHLD	.dc
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
.rd:	JMP	.sd
.nd:	CALL	prnt_1
	LXI	H,.rb+182
	PUSH	H
	CALL	prnt_2
	POP	B
.sd:	JMP	.td
.id:	CALL	prnt_1
	LXI	H,.rb+198
	PUSH	H
	CALL	prnt_2
	POP	B
.td:	DS	0
.wc:	DS	0
.vc:	LHLD	.sb
	MOV	A,H
	ORA	L
	JNZ	.ud
.xd:	LXI	H,1
	PUSH	H
	CALL	readlin
	POP	B
	SHLD	.ac
.vd:	LHLD	.ac
	INX	H
	MOV	A,H
	ORA	L
	JNZ	.xd
.wd:	LXI	H,21
	PUSH	H
	CALL	Send
	POP	B
	JMP	.yd
.ud:	LXI	H,6
	PUSH	H
	CALL	Send
	POP	B
.yd:	DS	0
.ec:	LHLD	.cc
	INX	H
	SHLD	.cc
	DCX	H
	LXI	D,4
	CALL	c.gt##
	JZ	.zd
	LHLD	.sb
	CALL	c.not##
.zd:	CALL	e.0##
	JNZ	.gc
.fc:	LHLD	.sb
	MOV	A,H
	ORA	L
	JNZ	.ae
	LXI	H,24
	PUSH	H
	CALL	Send
	POP	B
	JMP	.be
.ae:	LXI	H,6
	PUSH	H
	CALL	Send
	POP	B
.be:	LHLD	.sb
	JMP	.nc
.rb:
	DB	'Keyboard Abort'
	DB	10
	DB	0
	DB	'Sent C, Got %x, Errors %d '
	DB	10
	DB	0
	DB	'%x '
	DB	0
	DB	10
	DB	'Loop %d'
	DB	10
	DB	0
	DB	'chk1 %x chk2 %x CRC %x'
	DB	10
	DB	0
	DB	'Receiving: %s'
	DB	10
	DB	0
	DB	'ub'
	DB	0
	DB	'Overwrite %s (Y)'
	DB	10
	DB	0
	DB	10
	DB	'Overwriting...'
	DB	10
	DB	0
	DB	'wb'
	DB	0
	DB	'Opening new file '
	DB	10
	DB	0
	DB	'File creation error: %s'
	DB	10
	DB	0
	DB	'Filename Error'
	DB	10
	DB	0
	DB	10
	DB	'CRC fail'
	DB	10
	DB	0
	EXTRN	prnt_1
	EXTRN	prnt_2
	EXTRN	GetFile
	EXTRN	ListFil
	EXTRN	toupper
	EXTRN	GetCon
	EXTRN	FreeLis
	EXTRN	strlen
	EXTRN	fopen
	EXTRN	index
	EXTRN	SendFX
	EXTRN	Readlin
	EXTRN	Send
	EXTRN	getchar
	EXTRN	fclose
	EXTRN	unlink
	EXTRN	readlin
	EXTRN	g.
	END
                                                                                                                                                                                                                             