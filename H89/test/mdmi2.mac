;C/80 Compiler 3.1 (4/11/84) - (c) 1984 The Software Toolworks

	EXTRN	rcvbuf
	EXTRN	rcvptr
	DSEG
rptr::	DW	0
	EXTRN	statlin
	EXTRN	ticks
	EXTRN	tranSiz
	EXTRN	xyModem

	PUBLIC	ReadFil
.d:	DW	0
	CSEG

ReadFil:	LHLD	.d
	PUSH	H
	LHLD	xyModem
	MVI	H,0
	LXI	D,-89
	DAD	D
	MOV	A,H
	ORA	L
	JNZ	.e
	CALL	prnt_1
	LXI	H,.c
	PUSH	H
	CALL	prnt_2
	POP	B
.f:	CALL	GetYmod
	SHLD	.d
	LXI	D,0
	CALL	c.lt##
	JZ	.g
	LHLD	.d
	PUSH	H
	CALL	Receive
	POP	B
	JMP	.f
.g:	JMP	.h
.e:	CALL	ReadXmo
.h:	DS	0
.i:	POP	H
	SHLD	.d
	RET
.c:
	DB	'Waiting for Ymodem filename'
	DB	10
	DB	0

	PUBLIC	ReadXmo
	DSEG
.k:	DW	0
.l:	DW	0
.m:	DW	0
	CSEG

ReadXmo:	LXI	H,-22
	DAD	SP
	SPHL
	LHLD	.m
	PUSH	H
	LHLD	.l
	PUSH	H
	LHLD	.k
	PUSH	H
	CALL	FlushCo
	CALL	prnt_1
	LXI	H,.j
	PUSH	H
	CALL	prnt_2
	POP	B
	LXI	H,8
	DAD	SP
	PUSH	H
	LXI	H,16
	PUSH	H
	CALL	getline
	POP	B
	POP	B
	SHLD	.l
	LXI	H,0
	SHLD	.m
.p:	LHLD	.l
	XCHG
	LHLD	.m
	CALL	c.gt##
	JZ	.o
	JMP	.q
.n:	LHLD	.m
	INX	H
	SHLD	.m
	DCX	H
	JMP	.p
.q:	LXI	H,8
	DAD	SP
	XCHG
	LHLD	.m
	DAD	D
	PUSH	H
	LXI	H,10
	DAD	SP
	XCHG
	LHLD	.m
	DAD	D
	MOV	L,M
	MVI	H,0
	PUSH	H
	CALL	toupper
	POP	B
	POP	D
	MOV	A,L
	STAX	D
	JMP	.n
.o:	LXI	H,8
	DAD	SP
	PUSH	H
	CALL	strlen
	POP	B
	LXI	D,32767
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JNC	.r
	LXI	H,8
	DAD	SP
	PUSH	H
	LXI	H,.j+18
	PUSH	H
	CALL	fopen
	POP	B
	POP	B
	SHLD	.k
	LHLD	.k
	LXI	D,32767
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JNC	.s
	CALL	prnt_1
	LXI	H,.j+21
	PUSH	H
	LXI	H,10
	DAD	SP
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	LXI	H,6
	DAD	SP
	PUSH	H
	CALL	getchar
	PUSH	H
	CALL	toupper
	POP	B
	POP	D
	MOV	A,L
	STAX	D
	LXI	H,6
	DAD	SP
	MOV	L,M
	MVI	H,0
	LXI	D,-89
	DAD	D
	MOV	A,H
	ORA	L
	JNZ	.t
	CALL	prnt_1
	LXI	H,.j+48
	PUSH	H
	CALL	prnt_2
	POP	B
	LHLD	.k
	PUSH	H
	CALL	fclose
	POP	B
	LXI	H,8
	DAD	SP
	PUSH	H
	CALL	unlink
	POP	B
	LXI	H,8
	DAD	SP
	PUSH	H
	LXI	H,.j+65
	PUSH	H
	CALL	fopen
	POP	B
	POP	B
	SHLD	.k
	CALL	c.not##
	JZ	.u
	CALL	prnt_1
	LXI	H,.j+68
	PUSH	H
	CALL	prnt_2
	POP	B
	JMP	.v
.u:	LHLD	.k
	PUSH	H
	CALL	Receive
	POP	B
.v:	JMP	.w
.t:	CALL	prnt_1
	LXI	H,.j+95
	PUSH	H
	CALL	prnt_2
	POP	B
.w:	JMP	.x
.s:	CALL	prnt_1
	LXI	H,.j+127
	PUSH	H
	CALL	prnt_2
	POP	B
	LXI	H,8
	DAD	SP
	PUSH	H
	LXI	H,.j+65
	PUSH	H
	CALL	fopen
	POP	B
	POP	B
	SHLD	.k
	LHLD	.k
	MOV	A,H
	ORA	L
	JNZ	.y
	CALL	prnt_1
	LXI	H,.j+146
	PUSH	H
	LXI	H,10
	DAD	SP
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	JMP	.z
.y:	LHLD	.k
	PUSH	H
	CALL	Receive
	POP	B
.z:	DS	0
.x:	DS	0
.r:	DS	0
.ab:	POP	H
	SHLD	.k
	POP	H
	SHLD	.l
	POP	H
	SHLD	.m
	LXI	H,22
	DAD	SP
	SPHL
	RET
.j:
	DB	10
	DB	10
	DB	'Filename.Ext ? '
	DB	0
	DB	'ub'
	DB	0
	DB	10
	DB	'Overwrite file %s (Y/N)? '
	DB	0
	DB	10
	DB	'Overwriting...'
	DB	10
	DB	0
	DB	'wb'
	DB	0
	DB	'File Open Error. Aborting'
	DB	10
	DB	0
	DB	'Aborting Upload. File conflict'
	DB	10
	DB	0
	DB	10
	DB	'Opening new file'
	DB	10
	DB	0
	DB	'ERROR! Can'
	DB	39
	DB	't open file %s'
	DB	10
	DB	0

	PUBLIC	strncpy

strncpy:	DS	0
.cb:	LXI	H,2
	DAD	SP
	PUSH	H
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	DCX	H
	CALL	q.##
	INX	H
	LXI	D,0
	CALL	c.lt##
	JZ	.eb
	LXI	H,6
	DAD	SP
	PUSH	H
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	INX	H
	CALL	q.##
	DCX	H
	PUSH	H
	LXI	H,6
	DAD	SP
	PUSH	H
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	INX	H
	CALL	q.##
	DCX	H
	MOV	L,M
	MVI	H,0
	POP	D
	MOV	A,L
	STAX	D
	CALL	e.0##
.eb:	CALL	e.0##
	JZ	.db
	JMP	.cb
.db:	LXI	H,6
	DAD	SP
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	MVI	M,0
	RET

	PUBLIC	Receive
	DSEG
.fb:	DW	0
.gb:	DW	0
.hb:	DW	0
.ib:	DW	0
.jb:	DW	0
.kb:	DW	0
.lb:	DW	0
.mb:	DW	0
.nb:	DW	0
.ob:	DW	0
.pb:	DW	0
.qb:	DW	0
.rb:	DW	0
.sb:	DW	0
.tb:	DW	0
.ub:	DW	0
.vb:	DW	0
.wb:	DW	0
	CSEG

Receive:	LXI	H,-1029
	DAD	SP
	SPHL
	LHLD	.wb
	PUSH	H
	LHLD	.vb
	PUSH	H
	LHLD	.ub
	PUSH	H
	LHLD	.tb
	PUSH	H
	LHLD	.sb
	PUSH	H
	LHLD	.rb
	PUSH	H
	LHLD	.qb
	PUSH	H
	LHLD	.pb
	PUSH	H
	LHLD	.ob
	PUSH	H
	LHLD	.nb
	PUSH	H
	LHLD	.mb
	PUSH	H
	LHLD	.lb
	PUSH	H
	LHLD	.kb
	PUSH	H
	LHLD	.jb
	PUSH	H
	LHLD	.ib
	PUSH	H
	LHLD	.hb
	PUSH	H
	LHLD	.gb
	PUSH	H
	LHLD	.fb
	PUSH	H
	LXI	H,10
	SHLD	.ob
	LXI	H,0
	SHLD	.ib
	LXI	H,1064
	DAD	SP
	MVI	M,67
	LHLD	tranSiz
	SHLD	.vb
	LXI	H,1
	SHLD	.pb
	LXI	H,5
	SHLD	.qb
	LXI	H,0
	SHLD	.lb
	LHLD	rcvbuf
	SHLD	rptr
	CALL	prnt_1
	LXI	H,.bb
	PUSH	H
	CALL	prnt_2
	POP	B
.zb:	LXI	H,1064
	DAD	SP
	MOV	L,M
	MVI	H,0
	PUSH	H
	CALL	Send
	POP	B
	LHLD	.qb
	PUSH	H
	CALL	Readlin
	POP	B
	SHLD	.hb
	LHLD	.hb
	INX	H
	MOV	A,H
	ORA	L
	JNZ	.ac
	LXI	H,21
	PUSH	H
	CALL	Send
	POP	B
.ac:	LHLD	.lb
	INX	H
	SHLD	.lb
.xb:	LHLD	.hb
	DCX	H
	CALL	e.0##
	JZ	.bc
	LHLD	.hb
	DCX	H
	DCX	H
	CALL	e.0##
.bc:	CALL	e.0##
	JZ	.cc
	LHLD	.lb
	LXI	D,4
	CALL	c.gt##
.cc:	CALL	e.0##
	JNZ	.zb
.yb:	LXI	H,1064
	DAD	SP
	MVI	M,21
	LHLD	.lb
	LXI	D,32764
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JNC	.dc
	LXI	H,5
	SHLD	.qb
	CALL	prnt_1
	LXI	H,.bb+25
	PUSH	H
	CALL	prnt_2
	POP	B
	LXI	H,0
	SHLD	.pb
	LXI	H,1064
	DAD	SP
	MOV	L,M
	MVI	H,0
	PUSH	H
	CALL	Send
	POP	B
	LHLD	.qb
	PUSH	H
	CALL	Readlin
	POP	B
	SHLD	.hb
.dc:	LXI	H,0
	SHLD	.lb
.gc:	LXI	H,0
	SHLD	.ub
.hc:	LHLD	.hb
	DCX	H
	CALL	c.not##
	JNZ	.jc
	LHLD	.hb
	DCX	H
	DCX	H
	CALL	c.not##
.jc:	CALL	e.0##
	JNZ	.kc
	LHLD	.hb
	LXI	D,-4
	DAD	D
	CALL	c.not##
.kc:	CALL	e.0##
	JNZ	.lc
	LHLD	.hb
	INX	H
	CALL	c.not##
.lc:	CALL	e.0##
	CALL	c.not##
	JZ	.ic
	LHLD	.qb
	PUSH	H
	CALL	Readlin
	POP	B
	SHLD	.hb
	JMP	.hc
.ic:	LHLD	.hb
	INX	H
	MOV	A,H
	ORA	L
	JNZ	.mc
	CALL	prnt_1
	LXI	H,.bb+53
	PUSH	H
	LHLD	.lb
	INX	H
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
.mc:	LHLD	.hb
	DCX	H
	CALL	c.not##
	JNZ	.oc
	LHLD	.hb
	DCX	H
	DCX	H
	CALL	c.not##
.oc:	CALL	e.0##
	JZ	.nc
	LHLD	.hb
	DCX	H
	MOV	A,H
	ORA	L
	JNZ	.pc
	LXI	H,128
	SHLD	.vb
	JMP	.qc
.pc:	LXI	H,1024
	SHLD	.vb
.qc:	LHLD	.pb
	MOV	A,H
	ORA	L
	JNZ	.rc
	LHLD	.vb
	INX	H
	INX	H
	INX	H
	SHLD	.wb
	JMP	.sc
.rc:	LHLD	.vb
	LXI	D,4
	DAD	D
	SHLD	.wb
.sc:	LXI	H,0
	SHLD	.fb
	SHLD	.mb
.vc:	LXI	H,1
	PUSH	H
	CALL	Readlin
	POP	B
	SHLD	.sb
	LHLD	.sb
	INX	H
	MOV	A,H
	ORA	L
	JNZ	.wc
	LHLD	.mb
	INX	H
	SHLD	.mb
	DCX	H
	JMP	.xc
.wc:	LHLD	.fb
	INX	H
	SHLD	.fb
	DCX	H
	XCHG
	LXI	H,36
	DAD	SP
	DAD	D
	PUSH	H
	LHLD	.sb
	POP	D
	MOV	A,L
	STAX	D
.xc:	DS	0
.tc:	LHLD	.wb
	XCHG
	LHLD	.fb
	CALL	c.gt##
	JZ	.yc
	LHLD	.mb
	LXI	D,20
	CALL	c.gt##
.yc:	CALL	e.0##
	JNZ	.vc
.uc:	LXI	H,36
	DAD	SP
	MOV	L,M
	MVI	H,0
	SHLD	.jb
	LXI	H,36
	DAD	SP
	INX	H
	MOV	L,M
	MVI	H,0
	SHLD	.kb
	LHLD	.wb
	PUSH	H
	LHLD	.fb
	CALL	e.##
	JZ	.ad
	LHLD	.jb
	XCHG
	LHLD	.kb
	DAD	D
	LXI	D,-255
	DAD	D
	CALL	c.not##
.ad:	CALL	e.0##
	JZ	.zc
	LHLD	.ib
	INX	H
	MVI	H,0
	PUSH	H
	LHLD	.jb
	CALL	e.##
	JZ	.bd
	LHLD	.pb
	JMP	.dd
.ed:	LXI	H,0
	SHLD	.nb
	LXI	H,0
	SHLD	.fb
.hd:	LHLD	.vb
	XCHG
	LHLD	.fb
	CALL	c.gt##
	JZ	.gd
	JMP	.id
.fd:	LHLD	.fb
	INX	H
	SHLD	.fb
	DCX	H
	JMP	.hd
.id:	LHLD	rptr
	XCHG
	LHLD	.fb
	DAD	D
	PUSH	H
	LHLD	.fb
	INX	H
	INX	H
	XCHG
	LXI	H,38
	DAD	SP
	DAD	D
	MOV	L,M
	MVI	H,0
	POP	D
	MOV	A,L
	STAX	D
	LHLD	rptr
	XCHG
	LHLD	.fb
	DAD	D
	MOV	L,M
	MVI	H,0
	XCHG
	LHLD	.nb
	DAD	D
	MVI	H,0
	SHLD	.nb
	JMP	.fd
.gd:	LHLD	.fb
	INX	H
	INX	H
	XCHG
	LXI	H,36
	DAD	SP
	DAD	D
	MOV	L,M
	MVI	H,0
	PUSH	H
	LHLD	.nb
	CALL	e.##
	JZ	.jd
	LXI	H,1
	SHLD	.ub
.jd:	JMP	.cd
.kd:	LXI	H,0
	SHLD	.rb
	LXI	H,0
	SHLD	.fb
.nd:	LHLD	.vb
	XCHG
	LHLD	.fb
	CALL	c.gt##
	JZ	.md
	JMP	.od
.ld:	LHLD	.fb
	INX	H
	SHLD	.fb
	DCX	H
	JMP	.nd
.od:	LHLD	rptr
	XCHG
	LHLD	.fb
	DAD	D
	PUSH	H
	LHLD	.fb
	INX	H
	INX	H
	XCHG
	LXI	H,38
	DAD	SP
	DAD	D
	MOV	L,M
	MVI	H,0
	POP	D
	MOV	A,L
	STAX	D
	LHLD	rptr
	XCHG
	LHLD	.fb
	DAD	D
	MOV	L,M
	MVI	H,0
	XCHG
	LXI	H,8
	CALL	c.asl##
	PUSH	H
	LHLD	.rb
	CALL	x.##
	SHLD	.rb
	LXI	H,0
	SHLD	.gb
.rd:	LHLD	.gb
	LXI	D,32760
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JC	.qd
	JMP	.sd
.pd:	LHLD	.gb
	INX	H
	SHLD	.gb
	DCX	H
	JMP	.rd
.sd:	LHLD	.rb
	MVI	L,0
	MOV	A,H
	ANI	128
	MOV	H,A
	MOV	A,H
	ORA	L
	JZ	.td
	LHLD	.rb
	DAD	H
	LXI	D,4129
	PUSH	D
	CALL	x.##
	SHLD	.rb
	JMP	.ud
.td:	LHLD	.rb
	DAD	H
	SHLD	.rb
.ud:	JMP	.pd
.qd:	JMP	.ld
.md:	LHLD	.fb
	INX	H
	INX	H
	XCHG
	LXI	H,36
	DAD	SP
	DAD	D
	MOV	L,M
	MVI	H,0
	SHLD	.sb
	LHLD	.fb
	INX	H
	INX	H
	INX	H
	XCHG
	LXI	H,36
	DAD	SP
	DAD	D
	MOV	L,M
	MVI	H,0
	SHLD	.tb
	LHLD	.sb
	XCHG
	LXI	H,8
	CALL	c.asl##
	XCHG
	LHLD	.tb
	DAD	D
	PUSH	H
	LHLD	.rb
	CALL	e.##
	JZ	.vd
	LXI	H,1
	SHLD	.ub
.vd:	JMP	.cd
	JMP	.cd
.dd:	CALL	.switch##
	DW	.ed,0
	DW	.kd,1
	DW	0
.cd:	LHLD	.ub
	MOV	A,H
	ORA	L
	JZ	.wd
	LHLD	.ib
	INX	H
	SHLD	.ib
	LHLD	rptr
	XCHG
	LHLD	.vb
	DAD	D
	SHLD	rptr
	CALL	prnt_1
	LXI	H,.bb+93
	PUSH	H
	LXI	H,13
	PUSH	H
	LHLD	.ib
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	POP	B
	LHLD	.lb
	LXI	D,10
	DAD	D
	SHLD	.ob
	LHLD	rptr
	PUSH	H
	LHLD	rcvbuf
	CALL	s.##
	LXI	D,4096
	CALL	c.ule##
	JZ	.xd
	LXI	H,1067
	DAD	SP
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	PUSH	H
	LHLD	rcvbuf
	PUSH	H
	LXI	H,4096
	PUSH	H
	CALL	write
	POP	B
	POP	B
	POP	B
	LHLD	rcvbuf
	SHLD	rptr
.xd:	JMP	.yd
.wd:	CALL	prnt_1
	LXI	H,.bb+114
	PUSH	H
	LHLD	.lb
	INX	H
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	CALL	prnt_1
	LXI	H,.bb+139
	PUSH	H
	LHLD	.rb
	PUSH	H
	LHLD	.sb
	PUSH	H
	LHLD	.tb
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	POP	B
	POP	B
	CALL	prnt_1
	LXI	H,.bb+163
	PUSH	H
	LHLD	.ib
	PUSH	H
	LHLD	rptr
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	POP	B
.yd:	JMP	.zd
.bd:	LHLD	.ib
	MVI	H,0
	PUSH	H
	LHLD	.jb
	CALL	e.##
	JZ	.ae
.be:	LXI	H,1
	PUSH	H
	CALL	Readlin
	POP	B
	SHLD	.gb
	INX	H
	CALL	e.0##
	JZ	.ce
	JMP	.be
.ce:	CALL	prnt_1
	LXI	H,.bb+182
	PUSH	H
	LHLD	.jb
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	LXI	H,1064
	DAD	SP
	MVI	M,6
	JMP	.de
.ae:	CALL	prnt_1
	LXI	H,.bb+213
	PUSH	H
	LHLD	.lb
	INX	H
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	LXI	H,1064
	DAD	SP
	MVI	M,4
	LHLD	.lb
	LXI	D,10
	DAD	D
	SHLD	.lb
.de:	DS	0
.zd:	JMP	.ee
.zc:	CALL	prnt_1
	LXI	H,.bb+251
	PUSH	H
	LHLD	.lb
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	LHLD	.jb
	XCHG
	LHLD	.kb
	DAD	D
	LXI	D,-255
	DAD	D
	MOV	A,H
	ORA	L
	JZ	.fe
	CALL	prnt_1
	LXI	H,.bb+264
	PUSH	H
	LHLD	.jb
	PUSH	H
	LHLD	.kb
	PUSH	H
	LHLD	.jb
	XCHG
	LHLD	.kb
	DAD	D
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	POP	B
	POP	B
.fe:	LHLD	.mb
	LXI	D,32767
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JNC	.ge
	CALL	prnt_1
	LXI	H,.bb+304
	PUSH	H
	LHLD	.mb
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
.ge:	LHLD	.wb
	PUSH	H
	LHLD	.fb
	CALL	n.##
	JZ	.he
	CALL	prnt_1
	LXI	H,.bb+324
	PUSH	H
	LHLD	.fb
	PUSH	H
	LHLD	.wb
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	POP	B
.he:	DS	0
.ee:	DS	0
.nc:	CALL	GetCon
	LXI	D,-24
	DAD	D
	MOV	A,H
	ORA	L
	JNZ	.ie
	LXI	H,0
	SHLD	.hb
	LHLD	.lb
	LXI	D,10
	DAD	D
	SHLD	.lb
	LXI	H,0
	SHLD	.ub
	LXI	H,1064
	DAD	SP
	MVI	M,4
	LXI	H,1064
	DAD	SP
	MOV	L,M
	MVI	H,0
	PUSH	H
	CALL	Send
	POP	B
.ie:	LHLD	.ub
	MOV	A,H
	ORA	L
	JZ	.je
	LXI	H,6
	PUSH	H
	CALL	Send
	POP	B
	JMP	.ke
.je:	LHLD	.lb
	INX	H
	SHLD	.lb
	DCX	H
.le:	LXI	H,1
	PUSH	H
	CALL	Readlin
	POP	B
	SHLD	.hb
	INX	H
	CALL	e.0##
	JZ	.me
	JMP	.le
.me:	LXI	H,1064
	DAD	SP
	MOV	L,M
	MVI	H,0
	PUSH	H
	CALL	Send
	POP	B
	LXI	H,1064
	DAD	SP
	MVI	M,21
.ke:	LXI	H,1
	PUSH	H
	CALL	Readlin
	POP	B
	SHLD	.hb
.ec:	LHLD	.hb
	LXI	D,-4
	DAD	D
	CALL	e.0##
	JZ	.ne
	LHLD	.ob
	XCHG
	LHLD	.lb
	CALL	c.ge##
.ne:	CALL	e.0##
	JNZ	.gc
.fc:	LHLD	.hb
	LXI	D,-4
	DAD	D
	CALL	c.not##
	JZ	.pe
	LHLD	.ob
	XCHG
	LHLD	.lb
	CALL	c.gt##
.pe:	CALL	e.0##
	JZ	.oe
	LXI	H,6
	PUSH	H
	CALL	Send
	POP	B
	CALL	prnt_1
	LXI	H,.bb+358
	PUSH	H
	CALL	prnt_2
	POP	B
	JMP	.qe
.oe:	CALL	prnt_1
	LXI	H,.bb+377
	PUSH	H
	CALL	prnt_2
	POP	B
.qe:	LHLD	rcvbuf
	XCHG
	LHLD	rptr
	CALL	c.ult##
	JZ	.re
.se:	LHLD	rptr
	PUSH	H
	LHLD	rcvbuf
	CALL	s.##
	XCHG
	LXI	H,512
	CALL	c.div##
	XCHG
	CALL	e.0##
	JZ	.te
	LHLD	rptr
	INX	H
	SHLD	rptr
	DCX	H
	MVI	M,0
	JMP	.se
.te:	LXI	H,1067
	DAD	SP
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	PUSH	H
	LHLD	rcvbuf
	PUSH	H
	LHLD	rptr
	PUSH	H
	LHLD	rcvbuf
	CALL	s.##
	PUSH	H
	CALL	write
	POP	B
	POP	B
	POP	B
.re:	LXI	H,1067
	DAD	SP
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	PUSH	H
	CALL	fclose
	POP	B
.ue:	POP	H
	SHLD	.fb
	POP	H
	SHLD	.gb
	POP	H
	SHLD	.hb
	POP	H
	SHLD	.ib
	POP	H
	SHLD	.jb
	POP	H
	SHLD	.kb
	POP	H
	SHLD	.lb
	POP	H
	SHLD	.mb
	POP	H
	SHLD	.nb
	POP	H
	SHLD	.ob
	POP	H
	SHLD	.pb
	POP	H
	SHLD	.qb
	POP	H
	SHLD	.rb
	POP	H
	SHLD	.sb
	POP	H
	SHLD	.tb
	POP	H
	SHLD	.ub
	POP	H
	SHLD	.vb
	POP	H
	SHLD	.wb
	LXI	H,1029
	DAD	SP
	SPHL
	RET
.bb:
	DB	10
	DB	'Trying to receive file'
	DB	10
	DB	0
	DB	10
	DB	'Changing to Checksum mode'
	DB	10
	DB	0
	DB	10
	DB	'Timeout Error # %d - No starting SOH.'
	DB	10
	DB	0
	DB	'%cReceived sector %d'
	DB	0
	DB	10
	DB	'Error # %d - Bad Block'
	DB	10
	DB	0
	DB	'crc %x Chk1 %x chk2 %x '
	DB	0
	DB	'snum %d rcvptr %d'
	DB	10
	DB	0
	DB	10
	DB	'Received duplicate sector %d'
	DB	10
	DB	0
	DB	10
	DB	'Error # %d - Synchronization error.'
	DB	10
	DB	0
	DB	10
	DB	'Error # %d '
	DB	0
	DB	'Header Error - scur %x + scomp %x = %x'
	DB	10
	DB	0
	DB	'    Rcv Err Cnt %d'
	DB	10
	DB	0
	DB	' Bytes Read %d Bytes Expected %d'
	DB	10
	DB	0
	DB	10
	DB	'Transfer complete'
	DB	0
	DB	10
	DB	'Aborting'
	DB	0

	PUBLIC	SendFil
	DSEG
.we:	DW	0
.xe:	DW	0
.ye:	DW	0
	CSEG

SendFil:	LXI	H,-21
	DAD	SP
	SPHL
	LHLD	.ye
	PUSH	H
	LHLD	.xe
	PUSH	H
	LHLD	.we
	PUSH	H
	CALL	FlushCo
	CALL	prnt_1
	LXI	H,.ve
	PUSH	H
	CALL	prnt_2
	POP	B
	LXI	H,7
	DAD	SP
	PUSH	H
	LXI	H,16
	PUSH	H
	CALL	getline
	POP	B
	POP	B
	SHLD	.xe
	LXI	H,7
	DAD	SP
	PUSH	H
	CALL	strlen
	POP	B
	LXI	D,32767
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JNC	.ze
	LHLD	xyModem
	MVI	H,0
	LXI	D,-88
	DAD	D
	MOV	A,H
	ORA	L
	JNZ	.af
	LXI	H,7
	DAD	SP
	PUSH	H
	LXI	H,.ve+18
	PUSH	H
	CALL	fopen
	POP	B
	POP	B
	SHLD	.we
	LHLD	.we
	MOV	A,H
	ORA	L
	JNZ	.bf
	CALL	prnt_1
	LXI	H,.ve+21
	PUSH	H
	LXI	H,9
	DAD	SP
	PUSH	H
	LHLD	.we
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	POP	B
	JMP	.cf
.bf:	LHLD	.we
	PUSH	H
	LXI	H,9
	DAD	SP
	PUSH	H
	CALL	SendFX
	POP	B
	POP	B
.cf:	JMP	.df
.af:	LXI	H,7
	DAD	SP
	PUSH	H
	CALL	SendFY
	POP	B
.df:	DS	0
.ze:	DS	0
.ef:	POP	H
	SHLD	.we
	POP	H
	SHLD	.xe
	POP	H
	SHLD	.ye
	LXI	H,21
	DAD	SP
	SPHL
	RET
.ve:
	DB	10
	DB	10
	DB	'Filename.Ext ? '
	DB	0
	DB	'rb'
	DB	0
	DB	10
	DB	'File open  error!!    Can'
	DB	39
	DB	't open %s %d'
	DB	10
	DB	0

	PUBLIC	SendFX
	DSEG
.gf:	DW	0
.hf:	DW	0
.if:	DW	0
.jf:	DW	0
.kf:	DW	0
.lf:	DW	0
.mf:	DW	0
.nf:	DW	0
.of:	DW	0
.pf:	DW	0
.qf:	DW	0
.rf:	DB	0
.sf:	DW	0
.tf:	DW	0
.uf:	DW	0
.vf:	DW	0
.wf:	DW	0
	CSEG

SendFX:	LHLD	.wf
	PUSH	H
	LHLD	.vf
	PUSH	H
	LHLD	.uf
	PUSH	H
	LHLD	.tf
	PUSH	H
	LHLD	.sf
	PUSH	H
	LXI	H,26
	SHLD	.uf
	LXI	H,0
	SHLD	.uf
	LXI	H,1
	SHLD	.jf
	LXI	H,0
	SHLD	.qf
	LHLD	tranSiz
	SHLD	.nf
	LXI	H,0
	SHLD	.kf
	LXI	H,0
	SHLD	.of
	LHLD	rcvbuf
	SHLD	rptr
	LHLD	xyModem
	MVI	H,0
	LXI	D,-89
	DAD	D
	MOV	A,H
	ORA	L
	JNZ	.xf
	CALL	prnt_1
	LXI	H,.ff
	PUSH	H
	LXI	H,14
	DAD	SP
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	LXI	H,14
	DAD	SP
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	PUSH	H
	LHLD	rcvbuf
	LXI	D,128
	DAD	D
	PUSH	H
	LXI	H,4096
	PUSH	H
	CALL	read
	POP	B
	POP	B
	POP	B
	SHLD	.mf
	LHLD	.mf
	LXI	D,128
	DAD	D
	SHLD	.mf
	LHLD	rcvbuf
	SHLD	rptr
	LXI	H,12
	DAD	SP
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	SHLD	.wf
.yf:	LHLD	.wf
	MOV	L,M
	MVI	H,0
	MOV	A,H
	ORA	L
	JZ	.zf
	LHLD	rptr
	INX	H
	SHLD	rptr
	DCX	H
	PUSH	H
	LHLD	.wf
	INX	H
	SHLD	.wf
	DCX	H
	MOV	L,M
	MVI	H,0
	POP	D
	MOV	A,L
	STAX	D
	JMP	.yf
.zf:	DS	0
.ag:	LHLD	rptr
	PUSH	H
	LHLD	rcvbuf
	CALL	s.##
	LXI	D,128
	CALL	c.gt##
	JZ	.bg
	LHLD	rptr
	INX	H
	SHLD	rptr
	DCX	H
	MVI	M,0
	JMP	.ag
.bg:	LXI	H,128
	SHLD	.nf
	LXI	H,0
	SHLD	.jf
	LHLD	rcvbuf
	SHLD	rptr
	JMP	.cg
.xf:	CALL	prnt_1
	LXI	H,.ff+21
	PUSH	H
	LXI	H,4096
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	LXI	H,14
	DAD	SP
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	PUSH	H
	LHLD	rptr
	PUSH	H
	LXI	H,4096
	PUSH	H
	CALL	read
	POP	B
	POP	B
	POP	B
	SHLD	.mf
.cg:	LHLD	.mf
	LXI	D,28672
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JC	.dg
	LHLD	.of
	INX	H
	SHLD	.of
	LHLD	.mf
	XCHG
	LXI	H,128
	CALL	c.div##
	LXI	D,128
	CALL	c.mult##
	SHLD	.gf
	LHLD	.mf
	PUSH	H
	LHLD	.gf
	CALL	n.##
	JZ	.eg
	CALL	prnt_1
	LXI	H,.ff+39
	PUSH	H
	LHLD	.uf
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	LHLD	.mf
	SHLD	.hf
.hg:	LHLD	.hf
	LXI	D,28544
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JC	.gg
	JMP	.ig
.fg:	LHLD	.hf
	INX	H
	SHLD	.hf
	DCX	H
	JMP	.hg
.ig:	LHLD	rptr
	XCHG
	LHLD	.hf
	DAD	D
	PUSH	H
	LHLD	.uf
	POP	D
	MOV	A,L
	STAX	D
	JMP	.fg
.gg:	DS	0
.eg:	DS	0
.dg:	LHLD	.mf
	MOV	A,H
	ORA	L
	JNZ	.jg
	CALL	prnt_1
	LXI	H,.ff+62
	PUSH	H
	CALL	prnt_2
	POP	B
	LXI	H,10
	SHLD	.kf
	JMP	.kg
.jg:	CALL	prnt_1
	LXI	H,.ff+81
	PUSH	H
	LXI	H,14
	DAD	SP
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	PUSH	H
	LHLD	.nf
	PUSH	H
	LHLD	.jf
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	POP	B
	POP	B
	LXI	H,0
	SHLD	.kf
.ng:	LXI	H,1
	PUSH	H
	CALL	Readlin
	POP	B
	SHLD	.if
	LHLD	.if
	LXI	D,-67
	DAD	D
	MOV	A,H
	ORA	L
	JNZ	.og
	LXI	H,1
	SHLD	.qf
	CALL	prnt_1
	LXI	H,.ff+129
	PUSH	H
	CALL	prnt_2
	POP	B
	JMP	.pg
.og:	LHLD	.kf
	INX	H
	SHLD	.kf
	DCX	H
.pg:	CALL	GetCon
	LXI	D,-24
	DAD	D
	MOV	A,H
	ORA	L
	JNZ	.qg
	CALL	prnt_1
	LXI	H,.ff+144
	PUSH	H
	CALL	prnt_2
	POP	B
	LXI	H,10
	SHLD	.kf
	JMP	.kg
.qg:	DS	0
.lg:	LHLD	.if
	LXI	D,-67
	DAD	D
	CALL	e.0##
	JZ	.rg
	LHLD	.if
	LXI	D,-21
	DAD	D
	CALL	e.0##
.rg:	CALL	e.0##
	JZ	.sg
	LHLD	.kf
	LXI	D,60
	CALL	c.gt##
.sg:	CALL	e.0##
	JNZ	.ng
.mg:	LHLD	.kf
	LXI	D,32708
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JNC	.tg
	CALL	prnt_1
	LXI	H,.ff+161
	PUSH	H
	LHLD	.if
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
.tg:	LHLD	.if
	LXI	D,-67
	DAD	D
	CALL	c.not##
	JNZ	.vg
	LHLD	.if
	LXI	D,-21
	DAD	D
	CALL	c.not##
.vg:	CALL	e.0##
	JZ	.ug
	LXI	H,0
	SHLD	.kf
.yg:	LHLD	.nf
	LXI	D,32639
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JNC	.zg
	LXI	H,2
	MOV	A,L
	STA	.rf
	JMP	.ah
.zg:	LXI	H,1
	MOV	A,L
	STA	.rf
.ah:	CALL	prnt_1
	LXI	H,.ff+202
	PUSH	H
	LXI	H,13
	PUSH	H
	LHLD	.jf
	PUSH	H
	LHLD	.rf
	MVI	H,0
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	POP	B
	POP	B
	CALL	GetCon
	LXI	D,-24
	DAD	D
	MOV	A,H
	ORA	L
	JNZ	.bh
	LHLD	.kf
	LXI	D,10
	DAD	D
	SHLD	.kf
	JMP	.xg
.bh:	LHLD	.rf
	MVI	H,0
	PUSH	H
	CALL	Send
	POP	B
	LHLD	.jf
	PUSH	H
	CALL	Send
	POP	B
	LHLD	.jf
	CALL	c.com##
	PUSH	H
	CALL	Send
	POP	B
	LXI	H,0
	SHLD	.lf
	LXI	H,0
	SHLD	.pf
	LXI	H,0
	SHLD	.gf
.eh:	LHLD	.nf
	XCHG
	LHLD	.gf
	CALL	c.gt##
	JZ	.dh
	JMP	.fh
.ch:	LHLD	.gf
	INX	H
	SHLD	.gf
	DCX	H
	JMP	.eh
.fh:	LHLD	rptr
	XCHG
	LHLD	.gf
	DAD	D
	MOV	L,M
	MVI	H,0
	PUSH	H
	CALL	Send
	POP	B
	LHLD	.qf
	JMP	.hh
.ih:	LHLD	rptr
	XCHG
	LHLD	.gf
	DAD	D
	MOV	L,M
	MVI	H,0
	XCHG
	LHLD	.lf
	DAD	D
	SHLD	.lf
	JMP	.gh
.jh:	LHLD	rptr
	XCHG
	LHLD	.gf
	DAD	D
	MOV	L,M
	MVI	H,0
	XCHG
	LXI	H,8
	CALL	c.asl##
	PUSH	H
	LHLD	.pf
	CALL	x.##
	SHLD	.pf
	LXI	H,0
	SHLD	.hf
.mh:	LHLD	.hf
	LXI	D,32760
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JC	.lh
	JMP	.nh
.kh:	LHLD	.hf
	INX	H
	SHLD	.hf
	DCX	H
	JMP	.mh
.nh:	LHLD	.pf
	MVI	L,0
	MOV	A,H
	ANI	128
	MOV	H,A
	MOV	A,H
	ORA	L
	JZ	.oh
	LHLD	.pf
	DAD	H
	LXI	D,4129
	PUSH	D
	CALL	x.##
	SHLD	.pf
	JMP	.ph
.oh:	LHLD	.pf
	DAD	H
	SHLD	.pf
.ph:	JMP	.kh
.lh:	JMP	.gh
	JMP	.gh
.hh:	CALL	.switch##
	DW	.ih,0
	DW	.jh,1
	DW	0
.gh:	JMP	.ch
.dh:	LHLD	.qf
	JMP	.rh
.sh:	LHLD	.lf
	PUSH	H
	CALL	Send
	POP	B
	JMP	.qh
.th:	LHLD	.pf
	XCHG
	LXI	H,8
	CALL	c.asr##
	MVI	H,0
	PUSH	H
	CALL	Send
	POP	B
	LHLD	.pf
	MVI	H,0
	PUSH	H
	CALL	Send
	POP	B
	JMP	.qh
	JMP	.qh
.rh:	CALL	.switch##
	DW	.sh,0
	DW	.th,1
	DW	0
.qh:	DS	0
.wh:	LXI	H,1
	PUSH	H
	CALL	Readlin
	POP	B
	SHLD	.if
	LHLD	.if
	INX	H
	MOV	A,H
	ORA	L
	JNZ	.xh
	LHLD	.kf
	INX	H
	SHLD	.kf
.xh:	DS	0
.uh:	LHLD	.if
	INX	H
	CALL	c.not##
	JZ	.yh
	LHLD	.kf
	LXI	D,10
	CALL	c.gt##
.yh:	CALL	e.0##
	JNZ	.wh
.vh:	LHLD	.if
	LXI	D,-6
	DAD	D
	CALL	c.not##
	JNZ	.ai
	LHLD	.if
	LXI	D,-67
	DAD	D
	CALL	c.not##
.ai:	CALL	e.0##
	JZ	.zh
	LHLD	.jf
	MOV	A,H
	ORA	L
	JNZ	.bi
	LHLD	.if
	LXI	D,-67
	DAD	D
	MOV	A,H
	ORA	L
	JZ	.ci
	LXI	H,5
	PUSH	H
	CALL	Readlin
	POP	B
	SHLD	.gf
	LHLD	.gf
	LXI	D,-67
	DAD	D
	MOV	A,H
	ORA	L
	JZ	.di
	CALL	prnt_1
	LXI	H,.ff+234
	PUSH	H
	LHLD	.gf
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
.di:	LHLD	.gf
	INX	H
	MOV	A,H
	ORA	L
	JNZ	.ei
	LXI	H,10
	SHLD	.kf
	JMP	.kg
.ei:	DS	0
.ci:	LHLD	rptr
	LXI	D,128
	DAD	D
	SHLD	rptr
	LHLD	tranSiz
	SHLD	.nf
	JMP	.fi
.bi:	LHLD	rptr
	XCHG
	LHLD	.nf
	DAD	D
	SHLD	rptr
.fi:	LHLD	.jf
	INX	H
	SHLD	.jf
	LHLD	rptr
	PUSH	H
	LHLD	rcvbuf
	CALL	s.##
	XCHG
	LHLD	.mf
	CALL	c.uge##
	JZ	.gi
	LHLD	.of
	LXI	D,32767
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JNC	.hi
	LXI	H,0
	SHLD	.mf
	JMP	.ii
.hi:	LXI	H,14
	DAD	SP
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	PUSH	H
	LHLD	rcvbuf
	PUSH	H
	LXI	H,4096
	PUSH	H
	CALL	read
	POP	B
	POP	B
	POP	B
	SHLD	.mf
	CALL	prnt_1
	LXI	H,.ff+258
	PUSH	H
	LHLD	.mf
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	LHLD	rcvbuf
	SHLD	rptr
	LHLD	.mf
	LXI	D,28672
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JC	.ji
	LHLD	.of
	INX	H
	SHLD	.of
	LHLD	.mf
	XCHG
	LHLD	.nf
	CALL	c.div##
	XCHG
	LHLD	.nf
	CALL	c.mult##
	SHLD	.gf
	LHLD	.mf
	PUSH	H
	LHLD	.gf
	CALL	n.##
	JZ	.ki
	LHLD	.mf
	SHLD	.gf
.ni:	LHLD	.gf
	LXI	D,28672
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JC	.mi
	JMP	.oi
.li:	LHLD	.gf
	INX	H
	SHLD	.gf
	DCX	H
	JMP	.ni
.oi:	LHLD	rptr
	XCHG
	LHLD	.gf
	DAD	D
	MVI	M,26
	JMP	.li
.mi:	DS	0
.ki:	DS	0
.ji:	DS	0
.ii:	DS	0
.gi:	LHLD	rptr
	PUSH	H
	LHLD	rcvbuf
	CALL	s.##
	SHLD	.tf
	LHLD	.mf
	PUSH	H
	LHLD	.tf
	CALL	s.##
	LXI	D,31744
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JC	.pi
	LHLD	.nf
	LXI	D,32639
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JNC	.qi
	CALL	prnt_1
	LXI	H,.ff+278
	PUSH	H
	CALL	prnt_2
	POP	B
.qi:	LXI	H,128
	SHLD	.nf
	JMP	.ri
.pi:	LHLD	tranSiz
	SHLD	.nf
.ri:	JMP	.si
.zh:	LHLD	.kf
	INX	H
	SHLD	.kf
	LHLD	.if
	JMP	.ui
.vi:	CALL	prnt_1
	LXI	H,.ff+313
	PUSH	H
	LHLD	.jf
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	JMP	.ti
.wi:	CALL	prnt_1
	LXI	H,.ff+342
	PUSH	H
	CALL	prnt_2
	POP	B
	LXI	H,10
	SHLD	.kf
	JMP	.kg
	JMP	.ti
.xi:	CALL	prnt_1
	LXI	H,.ff+358
	PUSH	H
	CALL	prnt_2
	POP	B
	CALL	prnt_1
	LXI	H,.ff+389
	PUSH	H
	LHLD	.jf
	PUSH	H
	LHLD	.if
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	POP	B
	JMP	.ti
.ui:	CALL	.switch##
	DW	.vi,21
	DW	.wi,24
	DW	0
	JMP	.xi
.ti:	DS	0
.si:	DS	0
.wg:	LHLD	.mf
	LXI	D,0
	CALL	c.lt##
	JZ	.yi
	LHLD	.kf
	LXI	D,10
	CALL	c.gt##
.yi:	CALL	e.0##
	JNZ	.yg
.xg:	DS	0
.ug:	LXI	H,4
	PUSH	H
	CALL	Send
	POP	B
	LXI	H,10
	PUSH	H
	CALL	Readlin
	POP	B
	SHLD	.if
	LXI	D,-6
	DAD	D
	CALL	e.0##
	JZ	.zi
	LXI	H,4
	PUSH	H
	CALL	Send
	POP	B
.cj:	LXI	H,10
	PUSH	H
	CALL	Readlin
	POP	B
	SHLD	.if
	LXI	D,-6
	DAD	D
	CALL	e.0##
	JZ	.dj
	LHLD	.kf
	INX	H
	SHLD	.kf
	CALL	prnt_1
	LXI	H,.ff+402
	PUSH	H
	LHLD	.if
	PUSH	H
	CALL	prnt_2
	POP	B
	POP	B
	LXI	H,4
	PUSH	H
	CALL	Send
	POP	B
.dj:	DS	0
.aj:	LHLD	.if
	LXI	D,-6
	DAD	D
	CALL	e.0##
	JZ	.ej
	LHLD	.kf
	LXI	D,10
	CALL	c.gt##
.ej:	CALL	e.0##
	JNZ	.cj
.bj:	DS	0
.zi:	DS	0
.kg:	LHLD	.kf
	LXI	D,32758
	MOV	A,H
	XRI	128
	MOV	H,A
	DAD	D
	JC	.fj
	CALL	prnt_1
	LXI	H,.ff+439
	PUSH	H
	CALL	prnt_2
	POP	B
	JMP	.gj
.fj:	CALL	prnt_1
	LXI	H,.ff+459
	PUSH	H
	CALL	prnt_2
	POP	B
.gj:	LXI	H,14
	DAD	SP
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	PUSH	H
	CALL	fclose
	POP	B
.hj:	POP	H
	SHLD	.sf
	POP	H
	SHLD	.tf
	POP	H
	SHLD	.uf
	POP	H
	SHLD	.vf
	POP	H
	SHLD	.wf
	RET
.ff:
	DB	'Sending filename %s'
	DB	10
	DB	0
	DB	'Reading %d bytes'
	DB	10
	DB	0
	DB	'Filling Block with %d'
	DB	10
	DB	0
	DB	'Error! Empty File'
	DB	10
	DB	0
	DB	10
	DB	'Trying to send file %s'
	DB	10
	DB	'transize %d Block # %d'
	DB	10
	DB	0
	DB	'CRC requested'
	DB	10
	DB	0
	DB	'Keyboard cancel'
	DB	10
	DB	0
	DB	'Error! 60 Second Timeout.  Recieved %xH'
	DB	10
	DB	0
	DB	'%cSending sector # %d Header %x'
	DB	0
	DB	10
	DB	'Looking for C, got %c'
	DB	10
	DB	0
	DB	10
	DB	'Reading %d bytes!'
	DB	10
	DB	0
	DB	10
	DB	'Switched block size to 128 bytes'
	DB	10
	DB	0
	DB	10
	DB	'NAK Error! Bad Sector # %d'
	DB	10
	DB	0
	DB	10
	DB	'Sender Cancel'
	DB	10
	DB	0
	DB	10
	DB	'Error! Garbled ACK, Sector # '
	DB	0
	DB	'%d, Got %xH'
	DB	10
	DB	0
	DB	10
	DB	'Error! EOT not ACKed. Recieved %xh'
	DB	10
	DB	0
	DB	10
	DB	'Transfer complete'
	DB	10
	DB	0
	DB	10
	DB	'Aborting'
	DB	10
	DB	0

	PUBLIC	set_cli

set_cli:	DS	0
;#asm
    SCALL    MACRO    TYPE
        DB    377Q,TYPE
    ENDM
    mvi    A,0
    lxi    B,03ffh          ; line, echo, no word wrap
    SCALL    6            ; .CONSL
;#endasm
	RET

	PUBLIC	set_cch

set_cch:	DS	0
;#asm
    mvi    A,0            ; I.CSLMD - console mode
    lxi    B,83ffh         ; Char mode and Word Wrap at width
    SCALL    6            ; .CONSL
    mvi    a,3            ; I.CONWI - console width
    lxi    b,80ffh         ;   set to 80
    scall    6
;#endasm
	RET
	EXTRN	prnt_1
	EXTRN	prnt_2
	EXTRN	GetYmod
	EXTRN	FlushCo
	EXTRN	getline
	EXTRN	toupper
	EXTRN	strlen
	EXTRN	fopen
	EXTRN	getchar
	EXTRN	fclose
	EXTRN	unlink
	EXTRN	Send
	EXTRN	Readlin
	EXTRN	write
	EXTRN	GetCon
	EXTRN	SendFY
	EXTRN	read
	EXTRN	g.
	END
                                                                                                    